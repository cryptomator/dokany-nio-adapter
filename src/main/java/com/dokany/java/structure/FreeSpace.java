// Generated by delombok at Thu Apr 12 13:54:15 CEST 2018
package com.dokany.java.structure;

public final class FreeSpace {
	private final long totalBytes;
	private final long totalUsed;

	public long getFreeBytes() {
		return totalBytes - totalUsed;
	}

	@SuppressWarnings("all")
	public FreeSpace(final long totalBytes, final long totalUsed) {
		this.totalBytes = totalBytes;
		this.totalUsed = totalUsed;
	}

	@SuppressWarnings("all")
	public long getTotalBytes() {
		return this.totalBytes;
	}

	@SuppressWarnings("all")
	public long getTotalUsed() {
		return this.totalUsed;
	}

	@Override
	@SuppressWarnings("all")
	public boolean equals(final Object o) {
		if (o == this) return true;
		if (!(o instanceof FreeSpace)) return false;
		final FreeSpace other = (FreeSpace) o;
		if (this.getTotalBytes() != other.getTotalBytes()) return false;
		if (this.getTotalUsed() != other.getTotalUsed()) return false;
		return true;
	}

	@Override
	@SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		final long $totalBytes = this.getTotalBytes();
		result = result * PRIME + (int) ($totalBytes >>> 32 ^ $totalBytes);
		final long $totalUsed = this.getTotalUsed();
		result = result * PRIME + (int) ($totalUsed >>> 32 ^ $totalUsed);
		return result;
	}

	@Override
	@SuppressWarnings("all")
	public String toString() {
		return "FreeSpace(totalBytes=" + this.getTotalBytes() + ", totalUsed=" + this.getTotalUsed() + ")";
	}
}
