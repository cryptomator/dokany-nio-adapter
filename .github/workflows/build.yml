name: Build

on:
  [push]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    #This check is case insensitive
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    env:
      BUILD_VERSION: SNAPSHOT
      # Name of the project; used in multiple steps (e.g. for upload)
      PROJECT_NAME: dokany-nio-adapter
    steps:
      # Foreign Action: Checkout the current commit
      - uses: actions/checkout@v2
      # Foreign Action: Setup Java Runtime Environment
      - uses: actions/setup-java@v1
        with:
          java-version: 11
          server-id: bintray-jcenter
          server-username: BINTRAY_USERNAME # Defined in step "deploytojcenter"
          server-password: BINTRAY_API_KEY # See above
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: maven-
      - name: Ensure to use tagged version
        id: taggedVersion
        run: mvn versions:set --file ./pom.xml -DnewVersion=${GITHUB_REF##*/}
        if: startsWith(github.ref, 'refs/tags/') # Run if ref is tagged (e.g. "1.4")
      - name: Export the project version to the job environment
        id: setVersion # Output used above (outputs.artifact-version)
        run: |
          v=$(mvn help:evaluate "-Dexpression=project.version" -q -DforceStdout)
          echo "BUILD_VERSION=${v}" >> $GITHUB_ENV
      - name: Build and Test
        id: buildAndTest
        run: mvn -B clean install jacoco:report -Pcoverage,dependency-check
      - name: Upload code coverage report
        id: codacyCoverageReporter
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh)
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        continue-on-error: true
      - name: Upload snapshot artifact ${{ env.PROJECT_NAME }}-${{ env.BUILD_VERSION }}.jar
        id: uploadSnapshot
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.PROJECT_NAME }}-${{ env.BUILD_VERSION }}.jar
          path: target/${{ env.PROJECT_NAME }}-*.jar
      - name: Deploy to jcenter
        id: deployToJcenter
        run: mvn -B deploy -Prelease -DskipTests
        if: startsWith(github.ref, 'refs/tags/') # Run if ref is tagged (e.g. "v.1.4")
        env:
          BINTRAY_USERNAME: cryptobot
          BINTRAY_API_KEY: ${{ secrets.BINTRAY_API_KEY }}